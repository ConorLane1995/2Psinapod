"""
Script to take the 2P output from recordings that were processed together, and split them into separate files.
INPUT: set every variable in ALL CAPS before the main method
OUTPUT: split files in separate folders defined in R1_FOLDER and R2_FOLDER
AUTHOR: Veronica Tarka, August 2022, veronica.tarka@mail.mcgill.ca
"""
import numpy as np
import shutil
import os 

COMBINED_FOLDER = "/media/vtarka/USB DISK/Lab/2P/238_239_combined/" # folder where the Suite2P output for the combined recordings are

R1_FOLDER = "/media/vtarka/USB DISK/Lab/2P/Vid_238/" # folder to save the split files for the first recording in
R1_TRIGGER_FILE = "TSeries-08152022-1228-238_Cycle00001_VoltageRecording_001.csv" # file name for the trigger CSV (should be within COMBINED_FOLDER)
R1_CONDITION_FILE = "ID112_150822_12Fr_HighLP_1.mat" # file name for the .mat file with the condition labeling for every trial (should be within COMBINED_FOLDER)

R2_FOLDER = "/media/vtarka/USB DISK/Lab/2P/Vid_239/" # folder to save the split files for the second recording
R2_TRIGGER_FILE = "TSeries-08152022-1228-239_Cycle00001_VoltageRecording_001.csv" # file name for the trigger CSV (should be within COMBINED_FOLDER)
R2_CONDITION_FILE = "ID112_150822_12Fr_HighLP_2.mat" # file name for the .mat file with the condition labeling for every trial (should be within COMBINED_FOLDER)

JUNCTURE_FRAME = 7630 # frame where recording 1 stops and recording 2 begins
# JUNCTURE_FRAME is included in recording 2, JUNCTURE_FRAME-1 is included in recording 1

def main():
    # load our files that were generated by Suite2P and the stim files
    fluorescence_trace = np.load(COMBINED_FOLDER + "F.npy",allow_pickle=True) # uncorrected trace of dF/F
    neuropil_trace = np.load(COMBINED_FOLDER + "Fneu.npy",allow_pickle=True) # estimation of background fluorescence
    spks_trace = np.load(COMBINED_FOLDER+"spks.npy",allow_pickle=True)

    Fluo1 = fluorescence_trace[:,:JUNCTURE_FRAME]
    Fluo2 = fluorescence_trace[:,JUNCTURE_FRAME:]

    Fneu1 = neuropil_trace[:,:JUNCTURE_FRAME]
    Fneu2 = neuropil_trace[:,JUNCTURE_FRAME:]

    Spks1 = spks_trace[:,:JUNCTURE_FRAME]
    Spks2 = spks_trace[:,JUNCTURE_FRAME:]

    ### SAVING RECORDING 1 INFO ###
    if not os.path.exists(R1_FOLDER):
        os.makedirs(R1_FOLDER)

    np.save(R1_FOLDER + "F.npy",Fluo1)
    np.save(R1_FOLDER + "Fneu.npy",Fneu1)
    np.save(R1_FOLDER + "spks.npy",Spks1)

    # copy some of the shared files into the R1_FOLDER so you don't have to manually move them
    shutil.copy(COMBINED_FOLDER+R1_TRIGGER_FILE,R1_FOLDER+R1_TRIGGER_FILE) # copying the trigger file
    shutil.copy(COMBINED_FOLDER+R1_CONDITION_FILE,R1_FOLDER+R1_CONDITION_FILE) # copying the trial labeling

    # copy the Suite2P files that don't need to be split
    shutil.copy(COMBINED_FOLDER+"ops.npy",R1_FOLDER+"ops.npy")
    shutil.copy(COMBINED_FOLDER+"stat.npy",R1_FOLDER+"stat.npy")
    shutil.copy(COMBINED_FOLDER+"iscell.npy",R1_FOLDER+"iscell.npy")


    ### SAVING RECORDING 2 INFO ###
    if not os.path.exists(R2_FOLDER):
        os.makedirs(R2_FOLDER)

    np.save(R2_FOLDER + "F.npy",Fluo2)
    np.save(R2_FOLDER + "Fneu.npy",Fneu2)
    np.save(R2_FOLDER + "spks.npy",Spks2)

        # copy some of the shared files into the R1_FOLDER so you don't have to manually move them
    shutil.copy(COMBINED_FOLDER+R2_TRIGGER_FILE,R2_FOLDER+R2_TRIGGER_FILE) # copying the trigger file
    shutil.copy(COMBINED_FOLDER+R2_CONDITION_FILE,R2_FOLDER+R2_CONDITION_FILE) # copying the trial labeling

    # copy the Suite2P files that don't need to be split
    shutil.copy(COMBINED_FOLDER+"ops.npy",R2_FOLDER+"ops.npy")
    shutil.copy(COMBINED_FOLDER+"stat.npy",R2_FOLDER+"stat.npy")
    shutil.copy(COMBINED_FOLDER+"iscell.npy",R2_FOLDER+"iscell.npy")


if __name__=="__main__":
    main()